{"version":3,"sources":["../../src/pages/reporte-modal/reporte-modal.module.ts","../../src/pages/reporte-modal/reporte-modal.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACG;AAUnD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QARlC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,wEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,8DAAe,CAAC,QAAQ,CAAC,wEAAgB,CAAC;aAC3C;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZO;AACkD;AACrB;AAGR;AAC6B;AAEM;AACpB;AAI9E;;;;;GAKG;AAOH;IAIE,0BACS,OAAsB,EACtB,SAAoB,EACpB,QAA0B,EAC1B,QAAuB,EACvB,eAAwC,EACxC,MAAsB,EACtB,iBAA4C,EAC5C,WAA+B;QAP/B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAe;QACvB,oBAAe,GAAf,eAAe,CAAyB;QACxC,WAAM,GAAN,MAAM,CAAgB;QACtB,sBAAiB,GAAjB,iBAAiB,CAA2B;QAC5C,gBAAW,GAAX,WAAW,CAAoB;IAGxC,CAAC;IAED,yCAAc,GAAd;IAEA,CAAC;IAED;;;;MAIE;IACI,oCAAS,GAAf;;;;4BACE,qBAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;;wBAArE,SAAqE,CAAC;wBACtE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;;;;;KAC9D;IAEC;;MAEE;IACE,qCAAU,GAAhB;;;;4BACE,qBAAM,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE;;wBAA1C,SAA0C,CAAC;wBAC3C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;;;;;KA0DvE;IAID;;;;;;;;;;;;;;;;;;;;;;;;WAwBO;IACH,GAAG;IAEH,sCAAW,GAAX;QACE,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAGD,kCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAED,wCAAa,GAAb,UAAc,IAAU,EAAE,EAAU;QAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,IAAI,EAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAzIM,gBAAgB;QAJ5B,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;WACG;SAClC,CAAC;qEAM+B;YACX,wFAAS;YACV,8DAAgB;YACjB,6GAAc;YACN,iFAAuB;YAChC,mHAAc;YACH,iGAAyB;YAChC,aAAmB;OAZ7B,gBAAgB,CA4I5B;IAAD,CAAC;AAAA;SA5IY,gBAAgB,gB","file":"11.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ReporteModalPage } from './reporte-modal';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ReporteModalPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ReporteModalPage),\r\n  ],\r\n})\r\nexport class ReporteModalPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reporte-modal/reporte-modal.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, LoadingController, ViewController } from 'ionic-angular';\r\nimport { UserDataProvider } from '../../providers/user-data/user-data';\r\nimport { reportes } from '../../providers/user-data/reportes';\r\nimport { Debugger } from '../../providers/user-data/debugger';\r\nimport { LoaderProvider } from '../../providers/loader/loader';\r\nimport { ReportesManagerProvider } from '../../providers/reportes-manager/reportes-manager';\r\nimport { ReporteCitasProvider } from '../../providers/reporte-citas/reporte-citas';\r\nimport { ReportPresentatorProvider } from '../../providers/report-presentator/report-presentator';\r\nimport { PermissionsProvider } from '../../providers/permissions/permissions';\r\nimport { Citas } from '../../providers/user-data/citas';\r\n\r\n\r\n/**\r\n * Generated class for the ReporteModalPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-reporte-modal',\r\n  templateUrl: 'reporte-modal.html',\r\n})\r\nexport class ReporteModalPage {\r\n  \r\n    \r\n\r\n  constructor(\r\n    public navCtrl: NavController, \r\n    public navParams: NavParams,\r\n    public userData: UserDataProvider,\r\n    public viewCtrl:ViewController,\r\n    public reportesManager: ReportesManagerProvider,\r\n    public loader: LoaderProvider,\r\n    public reportPresentator: ReportPresentatorProvider,\r\n    public permissions:PermissionsProvider\r\n  ) {\r\n   \r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    \r\n  }\r\n\r\n  /**\r\n   * carga el reporte que se envio como parametro, si no existe este parametro carga el reporte de hoy\r\n   * si no existe el reporte de hoy pide a reportesManager que carge la lista de reportes\r\n   * que genera el reporte de hoy.\r\n  */\r\n  async setReport(){\r\n    await this.reportPresentator.setReport(this.navParams.get('reporte'));\r\n    console.log('reportset',this.reportPresentator.actualReport);\r\n  }\r\n\r\n    /**\r\n     * carga las citas del reporte actual\r\n    */\r\n  async loadReport(){\r\n    await this.reportPresentator.loadReporte();\r\n    console.log('citas loaded',this.reportPresentator.actualReport.citas);\r\n    /*let aux_citas_list = new Array();\r\n    let citas_res = await this.citasManager.getCitasObservable(\r\n     this.actualrepot.dateStartUTMS,\r\n     this.actualrepot.dateEndUTMS,\r\n     this.actualrepot.doctoresFilter,\r\n     this.actualrepot.cajaFilter,\r\n     this.actualrepot.recepcionFilter\r\n    ).toPromise();\r\n    if(citas_res){\r\n      for(let cita of citas_res){\r\n        let aux_cita = new Citas();\r\n        aux_cita.setData(cita);\r\n        aux_citas_list.push(aux_cita);\r\n      }\r\n    }*/\r\n      /*this.userData.getCitasUTms(`${this.actualrepot.dateStartUTMS}--${this.actualrepot.dateEndUTMS}`,this.actualrepot.doctoresFilter,this.actualrepot.cajaFilter,this.actualrepot.recepcionFilter).subscribe(\r\n        (val)=>{\r\n        let aux_results = Object.keys(val).map(function (key) { return val[key]; });\r\n        aux_results.forEach((element) => {\r\n          Debugger.log([`loadReport check element ${element['Nid']}`,element]);\r\n          let aux_cita = new Citas();\r\n          aux_cita.setData(element);\r\n          Debugger.log(['loadReport check aux cita',aux_cita]);\r\n          aux_cita.setDuracionMs();\r\n          Debugger.log(['loadReport check aux cita',aux_cita]);\r\n          if(aux_cita.checkState(StateCita.STATE_CANCELADA)){\r\n            this.noCancel++;\r\n            this.noCitas++;\r\n          }\r\n          if(aux_cita.checkState(StateCita.STATE_FINALIZADA)){\r\n            this.noShow++;\r\n            this.noCitas++;\r\n            if(aux_cita.duracionMs) this.duracionTotalMs += aux_cita.duracionMs;\r\n            if(aux_cita.costo) this.costoTotal = aux_cita.costo;\r\n            if(aux_cita.cobro) this.total+= aux_cita.cobro;\r\n            if(aux_cita.cobroEfectivo) this.totalefectivo+=aux_cita.cobroEfectivo;\r\n\t          if(aux_cita.cobroTarjeta) this.totalTarjeta+=aux_cita.cobroTarjeta;\r\n            if(aux_cita.cobroCheque) this.totalCheques+=aux_cita.cobroCheque;\r\n           \r\n\t          this.totalcuentas+=100;\r\n            this.totalAdeudo+=100;\r\n            aux_citas_list.push(aux_cita);\r\n           \r\n          }\r\n       });\r\n       this.actualrepot.citas = aux_citas_list;\r\n       this.setduracionTotalStr();\r\n       //this.cargarServicios();\r\n        this.reportloaded = true;\r\n       console.log(\"citas obtenidas por el reporte\",this.actualrepot.citas);\r\n      },\r\n       response => {\r\n         console.log(\"POST call in error\", response);\r\n         if(logoutonerrror)\r\n         this.userData.logout();\r\n       }\r\n      );*/\r\n  }\r\n\r\n  \r\n\r\n  /*cargarServicios(){\r\n    /*console.log(\"cargando servicios\");\r\n    this.actualrepot.servicios = new Array();\r\n    let aux_arr = new Array();\r\n    aux_arr[0]= this.userData.getDoctoresSimpleArray()\r\n    this.userData.getServicios(aux_arr).subscribe(\r\n      (val)=>{\r\n         let aux_results = Object.keys(val).map(function (key) { return val[key]; });\r\n         let dis  = this;\r\n         aux_results.forEach(function(element) {\r\n          dis.actualrepot.servicios.push(element);          \r\n        });\r\n        dis.actualrepot.citas.forEach(cita => {\r\n          cita.setAddedServices(dis.actualrepot.servicios);\r\n        });\r\n        this.reportloaded = true;\r\n      },\r\n        response => {\r\n          console.log(\"POST call in error\", response);\r\n        },\r\n        () => {\r\n          console.log(\"citas w services added\",this.actualrepot.citas);\r\n          console.log(\"loadedServices\",this.actualrepot.servicios);\r\n      });\r\n       */\r\n      //}\r\n\r\n      generatePDF(){\r\n        this.reportPresentator.generatePDF();\r\n      }\r\n\r\n      \r\n      dismiss() {\r\n        this.viewCtrl.dismiss();\r\n      }\r\n\r\n      setOpendetail(cita:Citas, as:boolean){\r\n        console.log('setOpendetail ',cita,as);\r\n        cita.opendetail = as;\r\n      }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reporte-modal/reporte-modal.ts"],"sourceRoot":""}